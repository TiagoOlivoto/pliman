}
if(is.null(dir_processed)){
diretorio_processada <- paste("./", sep = "")
} else{
diretorio_processada <- paste("./", dir_processed, sep = "")
}
help_count <-
function(img, img_healthy, img_lesion, img_background, randomize,
nrows, show_image, show_original, show_background, col_background,
save_image, dir_original, dir_processed){
if(is.character(img)){
all_files <- sapply(list.files(diretorio_original), file_name)
check_names_dir(img, all_files, diretorio_original)
imag <- list.files(diretorio_original, pattern = img)
name_ori <- file_name(imag)
extens_ori <- file_extension(imag)
img <- import_image(paste(diretorio_original, "/", name_ori, ".", extens_ori, sep = ""))
} else{
name_ori <- match.call()[[2]]
extens_ori <- "png"
}
if(is.character(img_healthy)){
all_files <- sapply(list.files(diretorio_original), file_name)
imag <- list.files(diretorio_original, pattern = img_healthy)
check_names_dir(img_healthy, all_files, diretorio_original)
name <- file_name(imag)
extens <- file_extension(imag)
img_healthy <- import_image(paste(diretorio_original, "/", name, ".", extens, sep = ""))
}
if(is.character(img_lesion)){
all_files <- sapply(list.files(diretorio_original), file_name)
imag <- list.files(diretorio_original, pattern = img_lesion)
check_names_dir(img_lesion, all_files, diretorio_original)
name <- file_name(imag)
extens <- file_extension(imag)
img_lesion <- import_image(paste(diretorio_original, "/", name, ".", extens, sep = ""))
}
original <- image_to_mat(img, randomize = randomize, nrows = nrows)
sadio <- image_to_mat(img_healthy, randomize = randomize, nrows = nrows)
sintoma <- image_to_mat(img_lesion, randomize = randomize, nrows = nrows)
################## no background #############
if(is.null(img_background)){
sadio_sintoma <-
rbind(sadio$df_man,
sintoma$df_man) %>%
transform(Y = ifelse(CODE == "img_healthy", 1, 0))
sadio_sintoma$CODE <- NULL
usef_area <- nrow(original$df_in)
model <-
glm(Y ~ R + G + B, family = binomial("logit"), data = sadio_sintoma) %>%
suppressWarnings()
# isolate plant
pred1 <- predict(model, newdata = original$df_in, type="response") %>% round(0)
plant_symp <- matrix(pred1, ncol = ncol(original$R))
plant_symp <- correct_image(plant_symp, perc = 0.01)
ID <- c(plant_symp == 0)
mpred1 <- bwlabel(plant_symp == 0)
shape_leaf <-
cbind(data.frame(computeFeatures.shape(mpred1)),
data.frame(computeFeatures.moment(mpred1))[,1:2]
)
if(!is.null(lower_size)){
shape_leaf <- shape_leaf[shape_leaf$s.area > lower_size, ]
} else{
shape_leaf <- shape_leaf[shape_leaf$s.area > 2, ]
}
if(!is.null(upper_size)){
shape_leaf <- shape_leaf[shape_leaf$s.area < upper_size, ]
shape_template <- shape_template[shape_template$s.area < upper_size, ]
}
shape_leaf$id <- 1:nrow(shape_leaf)
shape_leaf <- shape_leaf[, c(9, 7, 8, 1, 2:6)]
if(show_original == TRUE){
if(is.null(col_background)){
col_background <- col2rgb("green")
} else{
col_background <- col2rgb(col_background)
}
col_lesions <- col2rgb(col_lesions)
im2 <- img
im2@.Data[,,1][ID] <- col_lesions[1]
im2@.Data[,,2][ID] <- col_lesions[2]
im2@.Data[,,3][ID] <- col_lesions[3]
if(show_background == FALSE){
im2@.Data[,,1][!ID] <- col_background[1]
im2@.Data[,,2][!ID] <- col_background[2]
im2@.Data[,,3][!ID] <- col_background[3]
}
} else{
if(is.null(col_background)){
col_background <- col2rgb("green")
} else{
col_background <- col2rgb(col_background)
}
col_lesions <- col2rgb(col_lesions)
im2 <- img
im2@.Data[,,1][ID] <- col_lesions[1]
im2@.Data[,,2][ID] <- col_lesions[2]
im2@.Data[,,3][ID] <- col_lesions[3]
im2@.Data[,,1][!ID] <- col_background[1]
im2@.Data[,,2][!ID] <- col_background[2]
im2@.Data[,,3][!ID] <- col_background[3]
}
} else{
if(is.character(img_background)){
all_files <- sapply(list.files(diretorio_original), file_name)
imag <- list.files(diretorio_original, pattern = img_background)
check_names_dir(img_background, all_files, diretorio_original)
name <- file_name(imag)
extens <- file_extension(imag)
img_background <- import_image(paste(diretorio_original, "/", name, ".", extens, sep = ""))
}
fundo <- image_to_mat(img_background, randomize = randomize, nrows = nrows)
# separate image from background
fundo_resto <-
rbind(sadio$df_man,
sintoma$df_man,
fundo$df_man) %>%
transform(Y = ifelse(CODE == "img_background", 0, 1))
# fundo_resto$CODE <- NULL
modelo1 <-
glm(Y ~ R + G + B, family = binomial("logit"), data = fundo_resto) %>%
suppressWarnings()
pred1 <- predict(modelo1, newdata = original$df_in, type="response") %>% round(0)
plant_background <- matrix(pred1, ncol = ncol(original$R))
plant_background <- correct_image(plant_background, perc = 0.009)
# show_image(plant_background)
plant_background[plant_background == 1] <- 2
sadio_sintoma <-
rbind(sadio$df_man,
sintoma$df_man) %>%
transform(Y = ifelse(CODE == "img_healthy", 1, 0))
sadio_sintoma$CODE <- NULL
modelo2 <-
glm(Y ~ R + G + B, family = binomial("logit"), data = sadio_sintoma) %>%
suppressWarnings()
# isolate plant
ID <- c(plant_background == 2)
usef_area <- nrow(original$df_in[ID,])
pred2 <- predict(modelo2, newdata = original$df_in[ID,], type="response") %>% round(0)
pred3 <- predict(modelo2, newdata = original$df_in, type="response") %>% round(0)
pred3[!ID] <- 1
leaf_sympts <- matrix(pred3, ncol = ncol(original$R))
leaf_sympts <- correct_image(leaf_sympts, perc = 0.009)
plant_background[leaf_sympts == 1] <- 3
mpred1 <- bwlabel(leaf_sympts == 0)
shape_leaf <-
cbind(data.frame(computeFeatures.shape(mpred1)),
data.frame(computeFeatures.moment(mpred1))[,1:2]
)
if(!is.null(lower_size)){
shape_leaf <- shape_leaf[shape_leaf$s.area > lower_size, ]
} else{
shape_leaf <- shape_leaf[shape_leaf$s.area > 2, ]
}
if(!is.null(upper_size)){
shape_leaf <- shape_leaf[shape_leaf$s.area < upper_size, ]
shape_template <- shape_template[shape_template$s.area < upper_size, ]
}
shape_leaf$id <- 1:nrow(shape_leaf)
shape_leaf <- shape_leaf[, c(9, 7, 8, 1, 2:6)]
if(show_original == TRUE){
im2 <- img
col_lesions <- col2rgb(col_lesions)
im2@.Data[,,1][ID][which(pred2 == 0)] <- col_lesions[1]
im2@.Data[,,2][ID][which(pred2 == 0)] <- col_lesions[2]
im2@.Data[,,3][ID][which(pred2 == 0)] <- col_lesions[3]
show_image(im2)
if(!is.null(col_background)){
col_background <- col2rgb(col_background)
im2@.Data[,,1][!ID] <- col_background[1]
im2@.Data[,,2][!ID] <- col_background[2]
im2@.Data[,,3][!ID] <- col_background[3]
}
} else{
if(is.null(col_background)){
col_background <- col2rgb("white")
} else{
col_background <- col2rgb(col_background)
}
col_lesions <- col2rgb(col_lesions)
col_leaf <- col2rgb(col_leaf)
im2 <- img
im2@.Data[,,1][ID][which(pred2 == 0)] <- col_lesions[1]
im2@.Data[,,2][ID][which(pred2 == 0)] <- col_lesions[2]
im2@.Data[,,3][ID][which(pred2 == 0)] <- col_lesions[3]
im2@.Data[,,1][ID][which(pred2 != 0)] <- col_leaf[1]
im2@.Data[,,2][ID][which(pred2 != 0)] <- col_leaf[2]
im2@.Data[,,3][ID][which(pred2 != 0)] <- col_leaf[3]
im2@.Data[,,1][!ID] <- col_background[1]
im2@.Data[,,2][!ID] <- col_background[2]
im2@.Data[,,3][!ID] <- col_background[3]
}
}
if(show_image == TRUE){
show_image(im2)
text(shape_leaf[,2],
shape_leaf[,3],
shape_leaf$id,
col = text_col,
cex = text_size)
}
if(save_image == TRUE){
if(dir.exists(diretorio_processada) == FALSE){
dir.create(diretorio_processada)
}
png(paste0(diretorio_processada, "/",
prefix,
name_ori, ".",
extens_ori),
width = dim(im2@.Data)[1],
height = dim(im2@.Data)[2])
show_image(im2)
text(shape_leaf[,2],
shape_leaf[,3],
shape_leaf$id,
col = text_col,
cex = text_size)
dev.off()
}
stats <-
data.frame(area = c(n = length(shape_leaf$s.area),
min(shape_leaf$s.area),
mean(shape_leaf$s.area),
max(shape_leaf$s.area),
sd(shape_leaf$s.area),
sum(shape_leaf$s.area),
sum(shape_leaf$s.area) /usef_area * 100),
perimeter = c(NA,
min(shape_leaf$s.perimeter),
mean(shape_leaf$s.perimeter),
max(shape_leaf$s.perimeter),
sd(shape_leaf$s.perimeter),
sum(shape_leaf$s.perimeter),
NA)) %>%
transform(statistics = c("n", "min", "mean", "max", "sd", "sum", "prop"))
stats <- stats[c(3, 1, 2)]
results <- list(results = shape_leaf,
statistics = stats)
return(results)
}
if(missing(img_pattern)){
help_count(img, img_healthy, img_lesion, img_background, randomize,
nrows, show_image, show_original, show_background, col_background,
save_image, dir_original, dir_processed)
} else{
if(img_pattern %in% c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")){
img_pattern <- "^[0-9].*$"
}
plants <- list.files(pattern = img_pattern, diretorio_original)
extensions <- as.character(sapply(plants, file_extension))
names_plant <- as.character(sapply(plants, file_name))
if(length(grep(img_pattern, names_plant)) == 0){
stop(paste("'", img_pattern, "' pattern not found in '",
paste(getwd(), sub(".", "", diretorio_original), sep = ""), "'", sep = ""),
call. = FALSE)
}
if(!all(extensions %in% c("png", "jpeg", "jpg", "tiff"))){
stop("Allowed extensions are .png, .jpeg, .jpg, .tiff")
}
results <- list()
pb <- progress(max = length(plants), style = 4)
for (i in 1:length(plants)) {
run_progress(pb, actual = i,
text = paste("Processing image", names_plant[i]))
results[[i]] <-
help_count(img  = names_plant[i],
img_healthy, img_lesion, img_background, randomize,
nrows, show_image, show_original, show_background, col_background,
save_image, dir_original, dir_processed)
}
names(results) <- names_plant
stats <-
do.call(rbind,
lapply(seq_along(results), function(i){
results[[i]][["statistics"]] %>%
transform(id =  names(results[i])) %>%
.[,c(4, 1, 2, 3)]
})
)
results <-
do.call(rbind,
lapply(seq_along(results), function(i){
results[[i]][["results"]] %>%
transform(img =  names(results[i])) %>%
.[, c(10, 1:9)]
})
)
return(list(statistics = stats,
results = results))
}
}
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 10,
show_original = F,
col_background = "blue",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 10,
# show_original = F,
col_background = "blue",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 10,
# show_original = F,
# col_background = "blue",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste"
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 10,
show_original = F,
col_background = "pink",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 50,
show_original = F,
col_background = "pink",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 100,
show_original = F,
col_background = "pink",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 1200,
show_original = F,
col_background = "pink",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
# img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 100,
show_original = F,
col_background = "pink",
show_image = TRUE)
count_lesions(img = "fun50_t28_4",
img_healthy = img_healthy,
img_lesion = img_symptoms,
# img_background = img_background,
dir_processed = "teste_res2",
dir_original = "teste",
lower_size = 100,
# show_original = F,
col_background = "pink",
show_image = TRUE)
devtools::install(quick = TRUE)
setwd("E:/Desktop/pliman")
devtools::install(quick = TRUE)
install.packages(c("callr", "gh", "insight", "processx", "remotes", "RSQLite"))
setwd("E:/Desktop/FENOMICA/conta_lesao")
library(pliman)
mt <- import_image("img3.png")
show_image(mt)
a <-
count_lesions(img_pattern = "img2",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
devtools::install(quick = TRUE)
setwd("E:/Desktop/pliman")
devtools::install(quick = TRUE)
setwd("E:/Desktop/pliman")
devtools::install(quick = TRUE)
devtools::check()
devtools::install(quick = TRUE)
a <-
count_lesions(img_pattern = "img2",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
library(pliman)
a <-
count_lesions(img_pattern = "img2",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
setwd("E:/Desktop/FENOMICA/conta_lesao")
library(pliman)
mt <- import_image("img3.png")
show_image(mt)
a <-
count_lesions(img_pattern = "img2",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
a <-
count_lesions(img_pattern = "img3",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
a <-
count_lesions(img_pattern = "img",
img_healthy = "sadio",
img_lesion = "les",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
devtools::check(run_dont_test = TRUE)
setwd("E:/Desktop/pliman")
devtools::check(run_dont_test = TRUE)
library(pliman)
library(pliman)
img <- import_image(system.file("tmp_images/sev3.png", package = "pliman"))
healthy <- import_image(system.file("tmp_images/sev_healthy.png", package = "pliman"))
lesions <- import_image(system.file("tmp_images/sev_sympt.png", package = "pliman"))
show_image(img)
show_image(healthy)
show_image(lesions)
count_lesions(img = img,
img_healthy = healthy,
img_lesion = lesions,
show_image = TRUE)
library(metan)
library(EBImage)
detach("package:EBImage", unload = TRUE)
remove.packages("EBImage", lib="~/R/win-library/4.0")
remove.packages("plaiman", lib="~/R/win-library/4.0")
remove.packages("pliman", lib="~/R/win-library/4.0")
# Build package
devtools::install_github("TiagoOlivoto/pliman")
setwd("E:/Desktop/FENOMICA/conta_lesao/Dani")
setwd("E:/Desktop/FENOMICA/conta_lesao/Dani")
library(pliman)
a <-
count_lesions(img_pattern = "img",
img_healthy = "fol3",
img_lesion = "sint3",
img_background = "fun3",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
text_size = 0.7)
a <-
count_lesions(img_pattern = "img",
img_healthy = "fol3",
img_lesion = "sint3",
img_background = "fun3",
col_lesions = "red",
lower_size = 10,
show_image = TRUE,
dir_processed = "processadas",
save_image = TRUE,
text_size = 0.7)
usethis::use_git_ignore("package_release.R")
usethis::use_git_ignore("package_release.R")
