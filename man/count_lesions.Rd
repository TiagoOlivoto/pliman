% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_lesions.R
\name{count_lesions}
\alias{count_lesions}
\title{Counts the number of lesions}
\usage{
count_lesions(
  img,
  img_healthy,
  img_lesion,
  img_background = NULL,
  img_pattern = NULL,
  parallel = FALSE,
  workers = NULL,
  lower_size = NULL,
  upper_size = NULL,
  randomize = TRUE,
  nrows = 10000,
  show_image = FALSE,
  show_original = TRUE,
  show_background = TRUE,
  col_leaf = "green",
  col_lesions = "red",
  col_background = NULL,
  text_col = "black",
  text_size = 1,
  text_digits = 2,
  save_image = FALSE,
  prefix = "proc_",
  dir_original = NULL,
  dir_processed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{img}{The image to be analyzed.}

\item{img_healthy}{A color palette of healthy areas.}

\item{img_lesion}{A color palette of lesioned areas.}

\item{img_background}{An optional color palette of the image background.}

\item{img_pattern}{A pattern of file name used to identify images to be
processed. For example, if \code{img_pattern = "im"} all images that the name
matches the pattern (e.g., img1.-, image1.-, im2.-) will be analyzed.
Providing any number as pattern (e.g., \code{img_pattern = "1"}) will select
images that are nammed as 1.-, 2.-, and so on.}

\item{parallel}{Processes the images asynchronously (in parallel) in separate
R sessions running in the background on the same machine. It may speed up
the processing time, speccialy when \code{img_pattern} is used is informed. The
number of sections is set up to 90\% of available cores.}

\item{workers}{A positive numeric scalar or a function specifying the maximum
number of parallel processes that can be active at the same time.}

\item{lower_size}{Lower limit for size for the image analysis. Leaf images
often contain dirt and dust. To prevent dust from affecting the image
analysis, the lower limit of analyzed size is set to 0.1, i.e., objects
with lesser than 10\% of the mean of all objects are removed. One can set a
known area or use \code{lower_limit = 0} to select all objects (not advised).}

\item{upper_size}{Upper limit for size for the image analysis. Defaults to
\code{NULL}, i.e., no upper limit used.}

\item{randomize}{Randomize the lines before training the model?}

\item{nrows}{The number of lines to be used in training step.}

\item{show_image}{Show image after processing?}

\item{show_original}{Show the symptoms in the original image?}

\item{show_background}{Show the background? Defaults to \code{TRUE}. A white
background is shown by default when \code{show_original = FALSE}.}

\item{col_leaf}{Leaf color after image processing. Defaults to \code{"green"}}

\item{col_lesions}{Symptoms color after image processing. Defaults to \code{"red"}.}

\item{col_background}{Background color after image processing. Defaults to
\code{"NULL"}.}

\item{text_col, text_size, text_digits}{The color, size and significant digits
used in the text. The shows the pattern \code{o|a}, where \code{o} and \code{a} are the
object id and its area, respectively.}

\item{save_image}{Save the image after processing? The image is saved in the
current working directory named as \verb{proc_*} where \code{*} is the image name
given in \code{img}.}

\item{prefix}{The prefix to be included in the processed images. Defaults to
\code{"proc_"}.}

\item{dir_original, dir_processed}{The directory containing the original and
processed images. Defaults to \code{NULL}. In this case, the function will
search for the image \code{img} in the current working directory. After
processing, when \code{save_image = TRUE}, the processed image will be also
saved in such a directory.}

\item{verbose}{If \code{TRUE} (default) a summary is shown in the console.}
}
\value{
A data frame with the results for each image.
}
\description{
Counts the number of lesions in a sample or entire leaf based on provided
color palettes samples. A general linear model (binomial family) fitted to the
RGB values is used to segment the lesions from the healthy leaf. If a pallet
of background is provided, the function takes care of the details to isolate
it before computing the number and area of lesions. By using \code{img_pattern} it
is possible to process several images with common pattern names that are
stored in the current working directory or in the subdirectory informed in
\code{dir_original}.
}
\examples{
\donttest{
library(pliman)
img <- image_import(system.file("tmp_images/sev3.png", package = "pliman"))
healthy <- image_import(system.file("tmp_images/sev_healthy.png", package = "pliman"))
lesions <- image_import(system.file("tmp_images/sev_sympt.png", package = "pliman"))
image_show(img)
image_show(healthy)
image_show(lesions)
count_lesions(img = img,
              img_healthy = healthy,
              img_lesion = lesions,
              show_image = TRUE)
}

}
