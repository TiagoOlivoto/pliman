% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_mosaic.R
\name{mosaic_crop}
\alias{mosaic_crop}
\title{Crop a mosaic}
\usage{
mosaic_crop(
  mosaic,
  r = 3,
  g = 2,
  b = 1,
  re = 4,
  nir = 5,
  shapefile = NULL,
  show = c("rgb", "index"),
  index = "R",
  max_pixels = 5e+05,
  downsample = NULL,
  ...
)
}
\arguments{
\item{mosaic}{A mosaic of class \code{SpatRaster}, generally imported with
\code{\link[=mosaic_input]{mosaic_input()}}.}

\item{r}{The layer for the Red band (default: 3).}

\item{g}{The layer for the Green band (default: 2).}

\item{b}{The layer for the Blue band (default: 1).}

\item{re}{The layer for the Red-edge band (default: 4).}

\item{nir}{The layer for the Near-infrared band(default: 5).}

\item{shapefile}{An optional shapefile of class \code{sf} to be plotted over the
mosaic. It can be, for example, a plot-level result returned by
\code{\link[=mosaic_analyze]{mosaic_analyze()}}.}

\item{show}{The display option for the map view. Options are "rgb" for RGB
view and "index" for index view.}

\item{index}{The index to use for the index view. Defaults to "B".}

\item{max_pixels}{Maximum number of pixels to render in the map or plot
(default: 500000).}

\item{downsample}{Downsampling factor to reduce the number of pixels
(default: NULL). In this case, if the number of pixels in the image (width
x height) is greater than \code{max_pixels} a downsampling factor will be
automatically chosen so that the number of plotted pixels approximates the
\code{max_pixels}.}

\item{...}{Additional arguments passed to \code{\link[=mosaic_view]{mosaic_view()}}.}
}
\value{
A cropped version of \code{mosaic} based on the user-defined selection.
}
\description{
Crop a \code{SpatRaster} object based on user-defined selection using an
interactive map or plot.
}
\details{
This function uses the \code{mosaic_view} function to display an
interactive map or plot of the mosaic raster, allowing users to draw a
rectangle to select the cropping area. The selected area is then cropped
from the input mosaic and returned as a new \code{SpatRaster} object.
}
\examples{
if(interactive()){
library(pliman)
# Load a raster showing the elevation of Luxembourg
mosaic <- mosaic_input(system.file("ex/elev.tif", package="terra"))

# Generate an interactive map using 'mapview' (works only in an interactive section)
cropped <- mosaic_crop(mosaic)
mosaic_view(cropped)
}

}
